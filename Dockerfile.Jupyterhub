# JupyterHub
# This image is built by docker-compose

#ARG JUPYTERHUB_VERSION=0.9.2
#ARG JUPYTERHUB_VERSION=0.9.6
#ARG JUPYTERHUB_VERSION=latest
ARG JUPYTERHUB_VERSION=1.0.0

FROM jupyterhub/jupyterhub:latest

## Upgrade pip
RUN pip install --upgrade pip setuptools
RUN pip install pandas
## Make shared file system folder
RUN mkdir -p /jupyterhub/user
RUN apt-get update
RUN pip install psycopg2-binary
RUN pip install notebook
## Important: Mount the jupyterhub main configuration file

RUN groupadd jupyter
RUN apt-get install wget -y


# Anaconda installing

RUN apt-get install wget -y
RUN wget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh
RUN bash Anaconda3-2020.02-Linux-x86_64.sh -b -p /opt/conda
RUN rm Anaconda3-2020.02-Linux-x86_64.sh

# Set path to conda
ENV PATH=/opt/conda/bin:$PATH

# Updating Anaconda packages
RUN conda update conda
RUN conda update anaconda
RUN conda update --all

# R pre-requisites
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    fonts-dejavu \
    unixodbc \
    unixodbc-dev \
    r-cran-rodbc \
    gfortran \
    gcc && \
    rm -rf /var/lib/apt/lists/*

# Fix for devtools https://github.com/conda-forge/r-devtools-feedstock/issues/4
RUN ln -s /bin/tar /bin/gtar

RUN conda install -c r r-caret
RUN conda install -c r r-essentials

# Install e1071 R package (dependency of the caret R package)
RUN conda install --quiet --yes r-e1071
RUN conda install --quiet --yes  r-git2r
RUN conda install -c r r-irkernel


RUN R -e "install.packages('devtools')" \
 && R -e "install.packages('pbdZMQ')" \
 && R -e "install.packages('repr')"

RUN R -e "devtools::install_github('IRkernel/IRdisplay')" \
RUN R -e "devtools::install_github('IRkernel/IRkernel')" \
RUN R -e "devtools::install_github('IRkernel/IRdisplay')"
#Putting this to user false allows that all the user can have the R notebook available.
RUN R -e "IRkernel::installspec(user = FALSE)"


#Change group of R directory

RUN chgrp jupyter /opt/conda
RUN chgrp jupyter /opt/conda/lib
RUN chgrp jupyter /opt/conda/lib/R
RUN chgrp -R jupyter /opt/conda/lib/R/bin

#Installing scala Kernel
RUN pip install -U matplotlib
RUN conda install -c conda-forge sparkmagic

RUN apt-get update
RUN apt-get install -y gcc
RUN apt-get install -y libpython2.7-dev python-numpy
RUN apt-get install -y python-dev
RUN apt-get install -y python3-dev
RUN apt-get install -y libpython3-dev
RUN apt-get install -y libkrb5-dev
RUN pip install sparkmagic --user

RUN jupyter nbextension enable --py widgetsnbextension
# Init script spark magic

RUN jupyter-kernelspec install /opt/conda/lib/python3.7/site-packages/sparkmagic/kernels/sparkkernel
RUN jupyter-kernelspec install /opt/conda/lib/python3.7/site-packages/sparkmagic/kernels/pysparkkernel
RUN jupyter-kernelspec install /opt/conda/lib/python3.7/site-packages/sparkmagic/kernels/sparkrkernel
RUN jupyter serverextension enable --py sparkmagic

RUN mkdir -p /root/.sparkmagic
COPY jupyterhub_sparkmagic_config.json /root/.sparkmagic/config.json

ADD jupyterhub_config.py /srv/jupyterhub/jupyterhub_config.py

RUN useradd -m -G jupyter -p $(openssl passwd -1 admin) admin
RUN useradd -m -G jupyter -p $(openssl passwd -1 rhea) rhea
RUN chown rhea .

RUN mkdir -p /home/ganymede/.sparkmagic
RUN mkdir -p /home/rhea/.sparkmagic
RUN mkdir -p /home/io/.sparkmagic
COPY jupyterhub_sparkmagic_config.json /home/rhea/.sparkmagic/config.json
COPY jupyterhub_sparkmagic_config.json /home/ganymede/.sparkmagic/config.json
COPY jupyterhub_sparkmagic_config.json /home/io/.sparkmagic/config.json


RUN for name in io ganymede ; do useradd -m -G jupyter -p $(openssl passwd -1 $name) $name; done

WORKDIR /srv/jupyterhub
ENTRYPOINT ["jupyterhub"]
